// file: AlarmsOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package alarmsOntology;

import jade.content.onto.*;
import jade.content.schema.*;
import jade.util.leap.HashMap;
import jade.content.lang.Codec;
import jade.core.CaseInsensitiveString;

/** file: AlarmsOntology.java
 * @author ontology bean generator
 * @version 2016/05/20, 20:23:14
 */
public class AlarmsOntology extends jade.content.onto.Ontology  {
  //NAME
  public static final String ONTOLOGY_NAME = "Alarms";
  // The singleton instance of this ontology
  private static ReflectiveIntrospector introspect = new ReflectiveIntrospector();
  private static Ontology theInstance = new AlarmsOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String ESTUDIANTESDELPROYECTO_PROYECTOS="proyectos";
    public static final String ESTUDIANTESDELPROYECTO="EstudiantesDelProyecto";
    public static final String OBTENEROBJETOSDEAPRENDIZAJE_ID_OAS="id_OAs";
    public static final String OBTENEROBJETOSDEAPRENDIZAJE="ObtenerObjetosDeAprendizaje";
    public static final String OBTENERESTUDIANTEDENUNCIADO_ID_ESTUDIANTE="id_estudiante";
    public static final String OBTENERESTUDIANTEDENUNCIADO="ObtenerEstudianteDenunciado";
    public static final String ESTUDIANTEDENUNCIADO_ESTUDIANTE="estudiante";
    public static final String ESTUDIANTEDENUNCIADO="EstudianteDenunciado";
    public static final String OBTENERENTREGACALIFICADA_ID_EQUIPOS="id_equipos";
    public static final String OBTENERENTREGACALIFICADA_ID_ENTREGA="id_entrega";
    public static final String OBTENERENTREGACALIFICADA="ObtenerEntregaCalificada";
    public static final String OBTENERESTUDIANTESDELPROYECTO_ID_PROYECTOS="id_proyectos";
    public static final String OBTENERESTUDIANTESDELPROYECTO="ObtenerEstudiantesDelProyecto";
    public static final String OASRECOMENDADOS_OAS="oas";
    public static final String OASRECOMENDADOS="OAsRecomendados";
    public static final String ESTUDIANTESDELEQUIPOALTERADO_EQUIPOS="equipos";
    public static final String ESTUDIANTESDELEQUIPOALTERADO="EstudiantesDelEquipoAlterado";
    public static final String OBTENERESTUDIANTESDELEQUIPO_ID_EQUIPOS="id_equipos";
    public static final String OBTENERESTUDIANTESDELEQUIPO="ObtenerEstudiantesDelEquipo";
    public static final String ESTUDIANTESDEENTREGA_ENTREGAS="entregas";
    public static final String ESTUDIANTESDEENTREGA="EstudiantesDeEntrega";
    public static final String ENTREGACALIFICADA_ENTREGA="entrega";
    public static final String ENTREGACALIFICADA="EntregaCalificada";
    public static final String OBTENERASESORIAS_ID_ASESORIAS="id_asesorias";
    public static final String OBTENERASESORIAS="ObtenerAsesorias";
    public static final String OBTENERESTUDIANTESDEENTREGA_ID_ENTREGAS="id_entregas";
    public static final String OBTENERESTUDIANTESDEENTREGA="ObtenerEstudiantesDeEntrega";
    public static final String ASESORIASPROGRAMADAS_ASESORIAS="asesorias";
    public static final String ASESORIASPROGRAMADAS="AsesoriasProgramadas";
    public static final String ASESORIA_FECHA="fecha";
    public static final String ASESORIA_ASESOR="asesor";
    public static final String ASESORIA_SALON="salon";
    public static final String ASESORIA_ID="id";
    public static final String ASESORIA_ESTUDIANTES="estudiantes";
    public static final String ASESORIA="Asesoria";
    public static final String OBJETODEAPRENDIZAJE_NOMBRE="nombre";
    public static final String OBJETODEAPRENDIZAJE_ID="id";
    public static final String OBJETODEAPRENDIZAJE_ESTUDIANTES="estudiantes";
    public static final String OBJETODEAPRENDIZAJE="ObjetoDeAprendizaje";
    public static final String PROYECTO_OBJETIVO="objetivo";
    public static final String PROYECTO_ENTREGAS="entregas";
    public static final String PROYECTO_EQUIPOS="equipos";
    public static final String PROYECTO_ID="id";
    public static final String PROYECTO_TITULO="titulo";
    public static final String PROYECTO="Proyecto";
    public static final String ENTREGA_ENUNCIADO="enunciado";
    public static final String ENTREGA_FECHA="fecha";
    public static final String ENTREGA_EQUIPOS="equipos";
    public static final String ENTREGA_ID="id";
    public static final String ENTREGA_PROYECTO="proyecto";
    public static final String ENTREGA_TAREAS="tareas";
    public static final String ENTREGA="Entrega";
    public static final String ESTUDIANTE_CEDULA="cedula";
    public static final String ESTUDIANTE_NOMBRE="nombre";
    public static final String ESTUDIANTE_EQUIPO="equipo";
    public static final String ESTUDIANTE_CORREO="correo";
    public static final String ESTUDIANTE_APELLIDO="apellido";
    public static final String ESTUDIANTE="Estudiante";
    public static final String TAREA_DESCRIPCION="descripcion";
    public static final String TAREA_ID="id";
    public static final String TAREA_ESTUDIANTES="estudiantes";
    public static final String TAREA_ENTREGA="entrega";
    public static final String TAREA="Tarea";
    public static final String EQUIPO_ID="id";
    public static final String EQUIPO_ESTUDIANTES="estudiantes";
    public static final String EQUIPO="Equipo";

  /**
   * Constructor
  */
  private AlarmsOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema equipoSchema = new ConceptSchema(EQUIPO);
    add(equipoSchema, alarmsOntology.Equipo.class);
    ConceptSchema tareaSchema = new ConceptSchema(TAREA);
    add(tareaSchema, alarmsOntology.Tarea.class);
    ConceptSchema estudianteSchema = new ConceptSchema(ESTUDIANTE);
    add(estudianteSchema, alarmsOntology.Estudiante.class);
    ConceptSchema entregaSchema = new ConceptSchema(ENTREGA);
    add(entregaSchema, alarmsOntology.Entrega.class);
    ConceptSchema proyectoSchema = new ConceptSchema(PROYECTO);
    add(proyectoSchema, alarmsOntology.Proyecto.class);
    ConceptSchema objetoDeAprendizajeSchema = new ConceptSchema(OBJETODEAPRENDIZAJE);
    add(objetoDeAprendizajeSchema, alarmsOntology.ObjetoDeAprendizaje.class);
    ConceptSchema asesoriaSchema = new ConceptSchema(ASESORIA);
    add(asesoriaSchema, alarmsOntology.Asesoria.class);

    // adding AgentAction(s)

    // adding AID(s)

    // adding Predicate(s)
    PredicateSchema asesoriasProgramadasSchema = new PredicateSchema(ASESORIASPROGRAMADAS);
    add(asesoriasProgramadasSchema, alarmsOntology.AsesoriasProgramadas.class);
    PredicateSchema obtenerEstudiantesDeEntregaSchema = new PredicateSchema(OBTENERESTUDIANTESDEENTREGA);
    add(obtenerEstudiantesDeEntregaSchema, alarmsOntology.ObtenerEstudiantesDeEntrega.class);
    PredicateSchema obtenerAsesoriasSchema = new PredicateSchema(OBTENERASESORIAS);
    add(obtenerAsesoriasSchema, alarmsOntology.ObtenerAsesorias.class);
    PredicateSchema entregaCalificadaSchema = new PredicateSchema(ENTREGACALIFICADA);
    add(entregaCalificadaSchema, alarmsOntology.EntregaCalificada.class);
    PredicateSchema estudiantesDeEntregaSchema = new PredicateSchema(ESTUDIANTESDEENTREGA);
    add(estudiantesDeEntregaSchema, alarmsOntology.EstudiantesDeEntrega.class);
    PredicateSchema obtenerEstudiantesDelEquipoSchema = new PredicateSchema(OBTENERESTUDIANTESDELEQUIPO);
    add(obtenerEstudiantesDelEquipoSchema, alarmsOntology.ObtenerEstudiantesDelEquipo.class);
    PredicateSchema estudiantesDelEquipoAlteradoSchema = new PredicateSchema(ESTUDIANTESDELEQUIPOALTERADO);
    add(estudiantesDelEquipoAlteradoSchema, alarmsOntology.EstudiantesDelEquipoAlterado.class);
    PredicateSchema oAsRecomendadosSchema = new PredicateSchema(OASRECOMENDADOS);
    add(oAsRecomendadosSchema, alarmsOntology.OAsRecomendados.class);
    PredicateSchema obtenerEstudiantesDelProyectoSchema = new PredicateSchema(OBTENERESTUDIANTESDELPROYECTO);
    add(obtenerEstudiantesDelProyectoSchema, alarmsOntology.ObtenerEstudiantesDelProyecto.class);
    PredicateSchema obtenerEntregaCalificadaSchema = new PredicateSchema(OBTENERENTREGACALIFICADA);
    add(obtenerEntregaCalificadaSchema, alarmsOntology.ObtenerEntregaCalificada.class);
    PredicateSchema estudianteDenunciadoSchema = new PredicateSchema(ESTUDIANTEDENUNCIADO);
    add(estudianteDenunciadoSchema, alarmsOntology.EstudianteDenunciado.class);
    PredicateSchema obtenerEstudianteDenunciadoSchema = new PredicateSchema(OBTENERESTUDIANTEDENUNCIADO);
    add(obtenerEstudianteDenunciadoSchema, alarmsOntology.ObtenerEstudianteDenunciado.class);
    PredicateSchema obtenerObjetosDeAprendizajeSchema = new PredicateSchema(OBTENEROBJETOSDEAPRENDIZAJE);
    add(obtenerObjetosDeAprendizajeSchema, alarmsOntology.ObtenerObjetosDeAprendizaje.class);
    PredicateSchema estudiantesDelProyectoSchema = new PredicateSchema(ESTUDIANTESDELPROYECTO);
    add(estudiantesDelProyectoSchema, alarmsOntology.EstudiantesDelProyecto.class);


    // adding fields
    equipoSchema.add(EQUIPO_ESTUDIANTES, estudianteSchema, 0, ObjectSchema.UNLIMITED);
    equipoSchema.add(EQUIPO_ID, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    tareaSchema.add(TAREA_ENTREGA, entregaSchema, ObjectSchema.MANDATORY);
    tareaSchema.add(TAREA_ESTUDIANTES, estudianteSchema, 0, ObjectSchema.UNLIMITED);
    tareaSchema.add(TAREA_ID, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    tareaSchema.add(TAREA_DESCRIPCION, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    estudianteSchema.add(ESTUDIANTE_APELLIDO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    estudianteSchema.add(ESTUDIANTE_CORREO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    estudianteSchema.add(ESTUDIANTE_EQUIPO, equipoSchema, ObjectSchema.OPTIONAL);
    estudianteSchema.add(ESTUDIANTE_NOMBRE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    estudianteSchema.add(ESTUDIANTE_CEDULA, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    entregaSchema.add(ENTREGA_TAREAS, tareaSchema, 0, ObjectSchema.UNLIMITED);
    entregaSchema.add(ENTREGA_PROYECTO, proyectoSchema, ObjectSchema.OPTIONAL);
    entregaSchema.add(ENTREGA_ID, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    entregaSchema.add(ENTREGA_EQUIPOS, equipoSchema, 0, ObjectSchema.UNLIMITED);
    entregaSchema.add(ENTREGA_FECHA, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    entregaSchema.add(ENTREGA_ENUNCIADO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    proyectoSchema.add(PROYECTO_TITULO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    proyectoSchema.add(PROYECTO_ID, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    proyectoSchema.add(PROYECTO_EQUIPOS, equipoSchema, 0, ObjectSchema.UNLIMITED);
    proyectoSchema.add(PROYECTO_ENTREGAS, entregaSchema, 0, ObjectSchema.UNLIMITED);
    proyectoSchema.add(PROYECTO_OBJETIVO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    objetoDeAprendizajeSchema.add(OBJETODEAPRENDIZAJE_ESTUDIANTES, estudianteSchema, 0, ObjectSchema.UNLIMITED);
    objetoDeAprendizajeSchema.add(OBJETODEAPRENDIZAJE_ID, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    objetoDeAprendizajeSchema.add(OBJETODEAPRENDIZAJE_NOMBRE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    asesoriaSchema.add(ASESORIA_ESTUDIANTES, estudianteSchema, 0, ObjectSchema.UNLIMITED);
    asesoriaSchema.add(ASESORIA_ID, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    asesoriaSchema.add(ASESORIA_SALON, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    asesoriaSchema.add(ASESORIA_ASESOR, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    asesoriaSchema.add(ASESORIA_FECHA, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    asesoriasProgramadasSchema.add(ASESORIASPROGRAMADAS_ASESORIAS, asesoriaSchema, 1, ObjectSchema.UNLIMITED);
    obtenerEstudiantesDeEntregaSchema.add(OBTENERESTUDIANTESDEENTREGA_ID_ENTREGAS, (TermSchema)getSchema(BasicOntology.INTEGER), 1, ObjectSchema.UNLIMITED);
    obtenerAsesoriasSchema.add(OBTENERASESORIAS_ID_ASESORIAS, (TermSchema)getSchema(BasicOntology.INTEGER), 1, ObjectSchema.UNLIMITED);
    entregaCalificadaSchema.add(ENTREGACALIFICADA_ENTREGA, entregaSchema, ObjectSchema.MANDATORY);
    estudiantesDeEntregaSchema.add(ESTUDIANTESDEENTREGA_ENTREGAS, entregaSchema, 0, ObjectSchema.UNLIMITED);
    obtenerEstudiantesDelEquipoSchema.add(OBTENERESTUDIANTESDELEQUIPO_ID_EQUIPOS, (TermSchema)getSchema(BasicOntology.INTEGER), 1, ObjectSchema.UNLIMITED);
    estudiantesDelEquipoAlteradoSchema.add(ESTUDIANTESDELEQUIPOALTERADO_EQUIPOS, equipoSchema, 0, ObjectSchema.UNLIMITED);
    oAsRecomendadosSchema.add(OASRECOMENDADOS_OAS, objetoDeAprendizajeSchema, 1, ObjectSchema.UNLIMITED);
    obtenerEstudiantesDelProyectoSchema.add(OBTENERESTUDIANTESDELPROYECTO_ID_PROYECTOS, (TermSchema)getSchema(BasicOntology.INTEGER), 1, ObjectSchema.UNLIMITED);
    obtenerEntregaCalificadaSchema.add(OBTENERENTREGACALIFICADA_ID_ENTREGA, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    obtenerEntregaCalificadaSchema.add(OBTENERENTREGACALIFICADA_ID_EQUIPOS, (TermSchema)getSchema(BasicOntology.INTEGER), 1, ObjectSchema.UNLIMITED);
    estudianteDenunciadoSchema.add(ESTUDIANTEDENUNCIADO_ESTUDIANTE, estudianteSchema, ObjectSchema.MANDATORY);
    obtenerEstudianteDenunciadoSchema.add(OBTENERESTUDIANTEDENUNCIADO_ID_ESTUDIANTE, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    obtenerObjetosDeAprendizajeSchema.add(OBTENEROBJETOSDEAPRENDIZAJE_ID_OAS, (TermSchema)getSchema(BasicOntology.INTEGER), 1, ObjectSchema.UNLIMITED);
    estudiantesDelProyectoSchema.add(ESTUDIANTESDELPROYECTO_PROYECTOS, proyectoSchema, 1, ObjectSchema.UNLIMITED);

    // adding name mappings

    // adding inheritance

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
  }
