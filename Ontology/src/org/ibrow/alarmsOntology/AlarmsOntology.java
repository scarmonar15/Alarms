// file: AlarmsOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package org.ibrow.alarmsOntology;

import jade.content.onto.*;
import jade.content.schema.*;
import jade.util.leap.HashMap;
import jade.content.lang.Codec;
import jade.core.CaseInsensitiveString;

/** file: AlarmsOntology.java
 * @author ontology bean generator
 * @version 2016/05/9, 18:01:44
 */
public class AlarmsOntology extends jade.content.onto.Ontology  {
  //NAME
  public static final String ONTOLOGY_NAME = "Alarms";
  // The singleton instance of this ontology
  private static ReflectiveIntrospector introspect = new ReflectiveIntrospector();
  private static Ontology theInstance = new AlarmsOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String ESTUDIANTESDELEQUIPOALTERADO_ESTUDIANTES="estudiantes";
    public static final String ESTUDIANTESDELEQUIPOALTERADO="EstudiantesDelEquipoAlterado";
    public static final String OBTENERESTUDIANTESDELEQUIPO_ID_EQUIPO="id_equipo";
    public static final String OBTENERESTUDIANTESDELEQUIPO="ObtenerEstudiantesDelEquipo";
    public static final String ESTUDIANTESCALIFICADOS_ESTUDIANTES="estudiantes";
    public static final String ESTUDIANTESCALIFICADOS="EstudiantesCalificados";
    public static final String ESTUDIANTESDELPROYECTO_PROYECTO="proyecto";
    public static final String ESTUDIANTESDELPROYECTO_ESTUDIANTES="estudiantes";
    public static final String ESTUDIANTESDELPROYECTO="EstudiantesDelProyecto";
    public static final String ENTREGACALIFICADA_ENTREGA="entrega";
    public static final String ENTREGACALIFICADA="EntregaCalificada";
    public static final String OBTENERESTUDIANTESCALIFICADOS_ID_ESTUDIANTES="id_estudiantes";
    public static final String OBTENERESTUDIANTESCALIFICADOS="ObtenerEstudiantesCalificados";
    public static final String OBTENERESTUDIANTEDENUNCIADO_ID_ESTUDIANTE="id_estudiante";
    public static final String OBTENERESTUDIANTEDENUNCIADO="ObtenerEstudianteDenunciado";
    public static final String ESTUDIANTEDENUNCIADO_ESTUDIANTE="estudiante";
    public static final String ESTUDIANTEDENUNCIADO="EstudianteDenunciado";
    public static final String OBTENERENTREGACALIFICADA_ID_ENTREGA="id_entrega";
    public static final String OBTENERENTREGACALIFICADA="ObtenerEntregaCalificada";
    public static final String OBTENERESTUDIANTESDELPROYECTO_ID_PROYECTO="id_proyecto";
    public static final String OBTENERESTUDIANTESDELPROYECTO_ID_EQUIPO="id_equipo";
    public static final String OBTENERESTUDIANTESDELPROYECTO="ObtenerEstudiantesDelProyecto";
    public static final String PROYECTO_OBJETIVO="objetivo";
    public static final String PROYECTO_ENTREGAS="entregas";
    public static final String PROYECTO_ID="id";
    public static final String PROYECTO_TITULO="titulo";
    public static final String PROYECTO="Proyecto";
    public static final String ENTREGA_ENUNCIADO="enunciado";
    public static final String ENTREGA_FECHA="fecha";
    public static final String ENTREGA_ID="id";
    public static final String ENTREGA_PROYECTO="proyecto";
    public static final String ENTREGA_TAREAS="tareas";
    public static final String ENTREGA="Entrega";
    public static final String ESTUDIANTE_CEDULA="cedula";
    public static final String ESTUDIANTE_NOMBRE="nombre";
    public static final String ESTUDIANTE_EQUIPO="equipo";
    public static final String ESTUDIANTE_CORREO="correo";
    public static final String ESTUDIANTE_APELLIDO="apellido";
    public static final String ESTUDIANTE="Estudiante";
    public static final String TAREA_DESCRIPCION="descripcion";
    public static final String TAREA_ID="id";
    public static final String TAREA_ENTREGA="entrega";
    public static final String TAREA="Tarea";
    public static final String EQUIPO_ID="id";
    public static final String EQUIPO_ESTUDIANTES="estudiantes";
    public static final String EQUIPO="Equipo";

  /**
   * Constructor
  */
  private AlarmsOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)
    ConceptSchema equipoSchema = new ConceptSchema(EQUIPO);
    add(equipoSchema, org.ibrow.alarmsOntology.Equipo.class);
    ConceptSchema tareaSchema = new ConceptSchema(TAREA);
    add(tareaSchema, org.ibrow.alarmsOntology.Tarea.class);
    ConceptSchema estudianteSchema = new ConceptSchema(ESTUDIANTE);
    add(estudianteSchema, org.ibrow.alarmsOntology.Estudiante.class);
    ConceptSchema entregaSchema = new ConceptSchema(ENTREGA);
    add(entregaSchema, org.ibrow.alarmsOntology.Entrega.class);
    ConceptSchema proyectoSchema = new ConceptSchema(PROYECTO);
    add(proyectoSchema, org.ibrow.alarmsOntology.Proyecto.class);

    // adding AgentAction(s)

    // adding AID(s)

    // adding Predicate(s)
    PredicateSchema obtenerEstudiantesDelProyectoSchema = new PredicateSchema(OBTENERESTUDIANTESDELPROYECTO);
    add(obtenerEstudiantesDelProyectoSchema, org.ibrow.alarmsOntology.ObtenerEstudiantesDelProyecto.class);
    PredicateSchema obtenerEntregaCalificadaSchema = new PredicateSchema(OBTENERENTREGACALIFICADA);
    add(obtenerEntregaCalificadaSchema, org.ibrow.alarmsOntology.ObtenerEntregaCalificada.class);
    PredicateSchema estudianteDenunciadoSchema = new PredicateSchema(ESTUDIANTEDENUNCIADO);
    add(estudianteDenunciadoSchema, org.ibrow.alarmsOntology.EstudianteDenunciado.class);
    PredicateSchema obtenerEstudianteDenunciadoSchema = new PredicateSchema(OBTENERESTUDIANTEDENUNCIADO);
    add(obtenerEstudianteDenunciadoSchema, org.ibrow.alarmsOntology.ObtenerEstudianteDenunciado.class);
    PredicateSchema obtenerEstudiantesCalificadosSchema = new PredicateSchema(OBTENERESTUDIANTESCALIFICADOS);
    add(obtenerEstudiantesCalificadosSchema, org.ibrow.alarmsOntology.ObtenerEstudiantesCalificados.class);
    PredicateSchema entregaCalificadaSchema = new PredicateSchema(ENTREGACALIFICADA);
    add(entregaCalificadaSchema, org.ibrow.alarmsOntology.EntregaCalificada.class);
    PredicateSchema estudiantesDelProyectoSchema = new PredicateSchema(ESTUDIANTESDELPROYECTO);
    add(estudiantesDelProyectoSchema, org.ibrow.alarmsOntology.EstudiantesDelProyecto.class);
    PredicateSchema estudiantesCalificadosSchema = new PredicateSchema(ESTUDIANTESCALIFICADOS);
    add(estudiantesCalificadosSchema, org.ibrow.alarmsOntology.EstudiantesCalificados.class);
    PredicateSchema obtenerEstudiantesDelEquipoSchema = new PredicateSchema(OBTENERESTUDIANTESDELEQUIPO);
    add(obtenerEstudiantesDelEquipoSchema, org.ibrow.alarmsOntology.ObtenerEstudiantesDelEquipo.class);
    PredicateSchema estudiantesDelEquipoAlteradoSchema = new PredicateSchema(ESTUDIANTESDELEQUIPOALTERADO);
    add(estudiantesDelEquipoAlteradoSchema, org.ibrow.alarmsOntology.EstudiantesDelEquipoAlterado.class);


    // adding fields
    equipoSchema.add(EQUIPO_ESTUDIANTES, estudianteSchema, 1, ObjectSchema.UNLIMITED);
    equipoSchema.add(EQUIPO_ID, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    tareaSchema.add(TAREA_ENTREGA, entregaSchema, ObjectSchema.MANDATORY);
    tareaSchema.add(TAREA_ID, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    tareaSchema.add(TAREA_DESCRIPCION, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    estudianteSchema.add(ESTUDIANTE_APELLIDO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    estudianteSchema.add(ESTUDIANTE_CORREO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    estudianteSchema.add(ESTUDIANTE_EQUIPO, equipoSchema, ObjectSchema.MANDATORY);
    estudianteSchema.add(ESTUDIANTE_NOMBRE, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    estudianteSchema.add(ESTUDIANTE_CEDULA, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    entregaSchema.add(ENTREGA_TAREAS, tareaSchema, 1, ObjectSchema.UNLIMITED);
    entregaSchema.add(ENTREGA_PROYECTO, proyectoSchema, ObjectSchema.MANDATORY);
    entregaSchema.add(ENTREGA_ID, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    entregaSchema.add(ENTREGA_FECHA, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    entregaSchema.add(ENTREGA_ENUNCIADO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    proyectoSchema.add(PROYECTO_TITULO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    proyectoSchema.add(PROYECTO_ID, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    proyectoSchema.add(PROYECTO_ENTREGAS, entregaSchema, 1, ObjectSchema.UNLIMITED);
    proyectoSchema.add(PROYECTO_OBJETIVO, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.MANDATORY);
    obtenerEstudiantesDelProyectoSchema.add(OBTENERESTUDIANTESDELPROYECTO_ID_EQUIPO, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    obtenerEstudiantesDelProyectoSchema.add(OBTENERESTUDIANTESDELPROYECTO_ID_PROYECTO, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    obtenerEntregaCalificadaSchema.add(OBTENERENTREGACALIFICADA_ID_ENTREGA, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    estudianteDenunciadoSchema.add(ESTUDIANTEDENUNCIADO_ESTUDIANTE, estudianteSchema, ObjectSchema.MANDATORY);
    obtenerEstudianteDenunciadoSchema.add(OBTENERESTUDIANTEDENUNCIADO_ID_ESTUDIANTE, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    obtenerEstudiantesCalificadosSchema.add(OBTENERESTUDIANTESCALIFICADOS_ID_ESTUDIANTES, (TermSchema)getSchema(BasicOntology.STRING), 1, ObjectSchema.UNLIMITED);
    entregaCalificadaSchema.add(ENTREGACALIFICADA_ENTREGA, entregaSchema, ObjectSchema.MANDATORY);
    estudiantesDelProyectoSchema.add(ESTUDIANTESDELPROYECTO_ESTUDIANTES, estudianteSchema, 1, ObjectSchema.UNLIMITED);
    estudiantesDelProyectoSchema.add(ESTUDIANTESDELPROYECTO_PROYECTO, proyectoSchema, ObjectSchema.MANDATORY);
    estudiantesCalificadosSchema.add(ESTUDIANTESCALIFICADOS_ESTUDIANTES, estudianteSchema, 1, ObjectSchema.UNLIMITED);
    obtenerEstudiantesDelEquipoSchema.add(OBTENERESTUDIANTESDELEQUIPO_ID_EQUIPO, (TermSchema)getSchema(BasicOntology.INTEGER), ObjectSchema.MANDATORY);
    estudiantesDelEquipoAlteradoSchema.add(ESTUDIANTESDELEQUIPOALTERADO_ESTUDIANTES, estudianteSchema, 1, ObjectSchema.UNLIMITED);

    // adding name mappings

    // adding inheritance

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
  }
